<?php
$session =  Zend_Registry::get('session');
$project = $this->project;
?>

<!-- Right panel -->


<!-- Main content wrapper -->
<main id="content" class="main-content">
	<div class="main-page-content">

		<header class="main-page-content-header">
			<div class="options-menu">
				<button class="quick-link options-button" id="options-button" type="button">
					<span class='icon icon-menu'></span>
					Options
				</button>

				<div class="sidebar-container" id="options-menu-items">
					<a href="/project/" target="_blank" class='button quick-link add_pro' title="Add new project">
						<span class='icon icon-add'></span>
						Add Project</a>
					<!--<li><a href="#" class='edit_pro' title="edit"><img src="/images/icons/control/32/doc_edit.png" alt="" /><span>Edit Project</span></a></li>-->
					<!--<li><a href="#" class='update_pro' title="update"><img src="/images/icons/control/32/refresh.png" alt="" /><span>Update Project</span></a></li>-->
					<a class='button quick-link' href="<?= 'http://' . SITEURL . "/dompdf/print.php?url=" . 'http://' . SITEURL . "/project/print/id/" . $project['project_id'] . "?company=" . substr($project['quote_no'], 0, 3) . "&name=Centura_Project_" . preg_replace("![^a-z0-9]+!i", "_", $project['project_name']) . '.pdf' ?>" title="print">
						<span class='icon icon-pdf'></span>
						Print Project</a>
					<a class='button quick-link make-quote' href="/quote/index/project/<?= $project['project_id'] ?>" title="Make quote">
						<span class='icon icon-dollar'></span>
						Make Quote
					</a>
					<a href="#" class='button quick-link delete_pro' title="delete">
						<span class='icon icon-trash'></span>
						Close Project</a>
				</div>
			</div>

			<h1>Edit Project</h1>
		</header>

		<!-- Form -->
		<section aria-labelledby="project-information" id="section1" data-nav="Project Information" class="active">
			<form action="/project/edit/id/<?= $project["project_id"] ?>" method="post" class="form" id='project_content'>
				<div class="widget-table">
					<h2>Project Information</h2>
					<div class="formRow">
						<input type="hidden" id='project_id' value='<?= $project['project_id'] ?>'>
						<input type="hidden" id="owner" name='owner' value='<?= $project['owner'] ?>'>
						<input type="hidden" id='create_date' name='create_date' value='<?= $project['create_date']->format('Y-m-d') ?>' />
						<input type="hidden" id='architect' name='architect' value="<?= $project['architect'] ?>">
						<input type="hidden" id='specifiler' name="specifiler" value="<?= $project['specifiler'] ?>">

						<div class="oneTwo required-field">
							<label for="project_name">Project Name</label>
							<input type="text" id='project_name' class="validate[required]" placeholder="Project Name" name='project_name' value="<?= $project['project_name'] ?>" />
						</div>

						<div class="oneTwo">
							<label for="location">Centura Location</label>
							<select name="location" id="location">
								<?php foreach ($this->locations as $l) { ?>
									<option value="<?= $l['location_id'] ?>" <?php if ($l['location_id'] == $project['centura_location_id']) echo 'selected' ?>><?= $l['name'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo form-worksheet-owner">
							<label for="owner_name">Worksheet Owner</label>
							<input id="owner_name" name="owner_name" type="text" value='<?= $project['owner_name'] ?>' readonly />
						</div>

						<?php if ($session->user['approve_id'] != null) { ?>
							<div class="oneTwo form-worksheet-owner">
								<label for="worksheet_assign">Share Worksheet</label>
								<input id="worksheet_assign" name="worksheet_assign" type="text" value='<?= $project['worksheet_assign'] ?>' />
							</div>
						<?php } else { ?>
							<input type="hidden" id="worksheet_assign" name="worksheet_assign" />
						<?php } ?>

						<div class="oneTwo">
							<label for="quote_no">Project ID</label>
							<input id="quote_no" type="text" placeholder="123456" name='quote_no' value="<?= $project['quote_no'] ?>" readonly />
						</div>

						<div class="oneTwo required-field">
							<label for="project_location_address">Project Location</label>
							<input type="text" name='project_location_address' id="project_location_address" class="validate[required]" value='<?= $project['project_location_address'] ?>' />
						</div>

						<div class="oneTwo required-field">
							<label for="status">Status</label>
							<select name="status" id="status" class="validate[required]">
								<option value="">-- Select Status --</option>
								<?php foreach ($this->status as $s) { ?>
									<option value="<?= $s['uid'] ?>" <?php if ($s['uid'] == $project['status']) echo 'selected' ?>><?= $s['Status'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo required-field">
							<label for="reed">REED ID</label>
							<input type="text" name="reed" id="reed" value="<?= $project['reed'] ?>" class="validate[required]" />
						</div>

						<div class="oneTwo required-field">
							<label for='market_segment'>Market Segment</label>
							<select name="market_segment" id='market_segment' class="validate[required]">
								<option value="">Choose Segment</option>
								<?php foreach ($this->seg as $s) { ?>
									<option value="<?= $s['uid'] ?>" <?php if ($s['uid'] == $project['market_segment']) echo 'selected' ?>><?= $s['Market_Segment'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo required-field">
							<label for='architect_name'>Project Architect / Owner</label>
							<input type='text' name="architect_name" id='architect_name' class="validate[required] tipN" original-title="Type 2 letter to start or add your own" value='<?= $this->arch_name ?>' />
						</div>

						<div class="oneTwo">
							<label for="architect_loc">Architect Location</label>
							<select id="architect_loc" name="architect_loc">
								<?php foreach ($this->locations as $l) { ?>
									<option value="<?= $l['company_id'] ?>" <?php if ($l['company_id'] == $this->architect['Company_ID']) echo 'selected' ?>><?= $l['name'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo required-field">
							<label for='specifiler_name'>Specifier</label>
							<input type='text' id='specifiler_name' name="specifiler_name" value='<?= $this->spec_name ?>' class="validate[required] tipN" original-title="Type 2 letter to start or add your own">
						</div>

						<div class="oneTwo">
							<label for="specifiler_loc">Specifier Location</label>
							<select id="specifiler_loc" name="specifiler_loc">
								<?php foreach ($this->locations as $l) { ?>
									<option value="<?= $l['company_id'] ?>" <?php if ($l['company_id'] == $this->sepcloc['Company_ID']) echo 'selected' ?>><?= $l['name'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo">
							<label for="due_date">Tender Due Date</label>
							<input id="due_date" type="text" name='due_date' class="datepicker" value='<?= $project['due_date']->format('Y-m-d') ?>' />
						</div>

						<div class="oneTwo">
							<label for='required_date'>Material Required Date</label>
							<input id='required_date' type="text" name='required_date' class="datepicker" value='<?= $project['required_date']->format('Y-m-d') ?>' />
						</div>

						<div class="oneTwo">
							<label for="gerneral_contractor">General Contractor</label>
							<input type="text" id="gerneral_contractor" name="gerneral_contractor" placeholder="Add general contractor" value='<?php if (!empty($this->gerneral_contractor)) {
																																					echo $this->gerneral_contractor['name'] . ' - ' . $this->gerneral_contractor['company_id'];
																																				} ?>' />
							<input type="hidden" id="gerneral_contractor_id" name="gerneral_contractor_id" value="<?= $project['general_contractor_id'] ?>" />
						</div>

						<div class="oneTwo">
							<label for="gerneral_contractor_loc">General Contractor Location</label>
							<select id="gerneral_contractor_loc" name="gerneral_contractor_loc">
								<?php if ($this->gerneral_contractor['company_id'] ?? '' == null) $this->gerneral_contractor['company_id'] = DEFAULT_COMPNAY; ?>
								<?php foreach ($this->locations as $l) { ?>
									<option value="<?= $l['company_id'] ?>" <?php if ($l['company_id'] == $this->gerneral_contractor['company_id']) echo 'selected' ?>><?= $l['name'] ?></option>
								<?php } ?>
							</select>
						</div>

						<div class="oneTwo">
							<label for="awarded_contractor">Awarded Sub Contractor</label>
							<input type="text" id="awarded_contractor" name="awarded_contractor" placeholder="Add awarded contractor" value='<?php if (!empty($this->awarded_sub_contracotr)) {
																																					echo $this->awarded_sub_contracotr['name'] . ' - ' . $this->awarded_sub_contracotr['company_id'];
																																				} ?>' />
							<input type="hidden" id='awarded_contractor_id' name='awarded_contractor_id' value="<?= $project['awarded_sub_contracotr_id'] ?>">
						</div>

						<div class="oneTwo">
							<label for="awarded_contractor_loc">Awarded Contractor Location</label>
							<select id="awarded_contractor_loc" name="awarded_contractor_loc">
								<?php $this->awarded_sub_contracotr['company_id'] = $this->awarded_sub_contracotr['company_id'] ?? DEFAULT_COMPNAY; ?>
								<?php foreach ($this->locations as $l) { ?>
									<option value="<?= $l['company_id'] ?>" <?php if ($l['company_id'] == $this->awarded_sub_contracotr['company_id']) echo 'selected' ?>><?= $l['name'] ?></option>
								<?php } ?>
							</select>
						</div>
					</div>

					<?php if ($this->owner == 1) { ?>

						<div class="line"></div>

						<div class="widget-footer">
							<div class="widget-footer-button">
								<button disabled id="save-project" type="button" title="Save project information" class="button action save-project-button small">
									<span class="button-wrap">
										<span class="icon icon-save"></span>
										Save
									</span>
								</button>
							</div>
						</div>
					<?php } ?>
				</div>
			</form>
		</section>

		<section aria-labelledby="quoted-items" id="section2" data-nav="Quoted Items">
			<form method="post" class="form" id='project_log'>
				<div class="widget-table">
					<div class="widget-button">
						<?php if ($this->owner == 1) { ?>
							<button type="button" title="Add new item" class="button action has-icon add-item-button small" id="add_item">
								<span class="button-wrap">
									<span class="icon icon-add"></span>
									Add Item
								</span>
							</button>
							<!--<button type="submit" title="Save new items" class="button action has-icon small" id="save_item" disabled>
								<span class="button-wrap">
									<span class="icon icon-save"></span>
									Save
								</span>
							</button>
							<button type="submit" title="Delete items" class="button action has-icon small" id="delete-multiple-item" disabled>
								<span class="button-wrap">
									<span class="icon icon-trash"></span>
									Delete item
								</span>
							</button>-->
						<?php } ?>
					</div>
					<h2>Quoted Items</h2>
					<table cellpadding="0" cellspacing="0" width="100%" class="sTable display nowrap" id="items">
						<thead>
							<tr>
								<th>Item</th>
								<th>Quality Quoted</th>
								<th>Unit Price</th>
								<th>Unit Of Measure</th>
								<th>Price Quoted</th>
								<th>Note</th>
								<th>Options</th>
							</tr>
						</thead>
					</table>
				</div>
			</form>
		</section>

		<section aria-labelledby="project-log" id="section3" data-nav="Project Log">
			<div class="widget-table">
				<div class="widget-button">
					<?php if ($this->owner == 1) { ?>
						<button type="button" title="Add new log" class="button action has-icon add-log-button small" id="opener">
							<span class="button-wrap">
								<span class="icon icon-add"></span>
								Add log
							</span>
						</button>
					<?php } ?>
				</div>
				<h2>Project Log</h2>
				<table cellpadding="0" cellspacing="0" width="100%" class="display" id='project_memo'>
					<thead>
						<tr>
							<th>Log Time</th>
							<th>Action Items Completed</th>
							<th>Follow Up Date</th>
							<th>Next Action Required</th>
							<th>Added by</th>
							<th class="action">Options</th>
						</tr>
					</thead>
				</table>
			</div>
		</section>

		<section aria-labelledby="quote-by-project" id="section4" data-nav="Quote by this project">
			<div class="widget-table">
				<div class="widget-button">
					<?php if ($this->owner == 1) { ?>
						<button onclick="location.href='/quote/index/project/<?= $project['project_id'] ?>'" type="button" title="Add new quote" class="button action has-icon add-quote-button small" id="add-quote">
							<span class="button-wrap">
								<span class="icon icon-add"></span>
								Make Quote
							</span>
						</button>
					<?php } ?>
				</div>
				<h2>Project Quotes</h2>
				<table width="100%" class="display" id='project-quote-table'>
					<thead>
						<tr>
							<th>Quote ID</th>
							<th>Architectural Rep.</th>
							<th>Market Segment</th>
							<th>Quote Date</th>
							<th>Expire Date</th>
							<th>Ship Required Date</th>
							<th>Approve Status</th>
						</tr>
					</thead>
				</table>
			</div>
		</section>

		<div id="dialog-message" title="Add Log">
			<form action="" class="dialog" id='memo'>
				<div class="dialog-form">
					<input type="hidden" name="author" id="memo-author" value="<?= $session->user['id'] ?>">
					<div class="oneTwo required-field dialog-note">
						<label for="title">Title</label>
						<textarea rows="2" name='title' id='title' placeholder="Title"></textarea>
					</div>

					<div class="oneTwo required-field dialog-note">
						<label for="title">Content</label>
						<textarea rows="8" name='content' id='content' class="validate[required]" placeholder="Log content"></textarea>
					</div>

					<div class="oneTwo required-field dialog-note">
						<label for="type">Next Action</label>
						<textarea rows="3" name="type" id='type' placeholder="Critical updates note"></textarea>
					</div>

					<div class="oneTwo dialog-note">
						<label for='follow_up_date'>Follow Up Date</label>
						<input type="text" name='follow_up_date' id='follow_up_date' class="datepicker" value='<?= $project['due_date']->format('Y-m-d') ?>' />
					</div>
				</div>
			</form>
		</div>

		<div id="dialog-item" title="Add Item">
			<form action="" class="dialog" id='item'>
				<div class="dialog-form">
					<div class="oneTwo required-field">
						<label for="item_id">Item ID</label>
						<input type="hidden" name="item" id='item_input' />
						<input type="text" id="item_id" name='item_id' class="validate[required]" />
					</div>

					<div class="oneTwo required-field">
						<label for='uom'>Unit Of Measure</label>
						<select name="uom" id='uom' class="validate[required]">
							<option value=''>-- Select UOM --</option>
						</select>
					</div>

					<div class="oneTwo required-field">
						<label for='price'>Price ($)</label>
						<input type="text" class="validate[required,custom[number]]" name="price" id='price' placeholder="You can override the price" />
					</div>

					<div class="oneTwo required-field">
						<label for='qty'>Quantity</label>
						<input type="text" name="qty" id='qty' class="validate[required,custom[number]]" />
					</div>

					<div class="oneTwo dialog-note">
						<label for='note'>Note</label>
						<textarea rows="5" name='note' id='note' maxlength="255" class="validate[maxSize[255]]"></textarea>
						<input type="hidden" id="is_edit" value='0' />
					</div>
				</div>
			</form>
		</div>
	</div>
</main>


<script type="text/javascript">
	let memoTable = $('#project_memo').DataTable({
		ajax: {
			url: "/project/memo/id/" + $('#project_id').val(),
			dataSrc: ''
		},
		processing: true,
		columns: [{
				data: "added.date",
				render: function(data) {
					let date = new Date(data);
					return date.toLocaleString();
				}
			},
			{
				data: "title",
				render: function(data, type, row, meta) {
					if (row.content == null) {
						return '<p><b>' + data + '</b></p>';
					} else {
						return '<p><b>' + data + '</b></br>' + row.content + '</p>';
					}
				}
			},
			{
				data: "follow_up_date.date",
				render: function(data) {
					let date = new Date(data);
					return date.toLocaleDateString();
				}
			},
			{
				data: "type"
			},
			{
				data: "author"
			},
			{
				data: "memo_id",
				render: function(data) {
					<?php if ($this->owner == 1) { ?>
						return '<div class="row-button">' +
							'<a title="Edit this memo" class="memo-edit" href="#">' +
							'<span class="button-wrap">' +
							'<span class="icon icon-edit"></span>' +
							'</span></a>' +
							'<a title="Delete this memo" class="memo_delete" target="_blank" href="/memo/delete/id/' + data +
							'"><span class="button-wrap"><span class="icon icon-delete"></span></span></a></div>';
					<?php } else { ?>
						return null;
					<?php } ?>
				}
			},
		],
		columnDefs: [{
				targets: [0, 2, 4],
				className: 'dt-body-center'
			},
			{
				targets: [0, 1, 2, 3, 4],
				className: 'dt-head-center'
			}
		],
		order: [
			[5, "desc"]
		],
		scrollX: true,
		fixedColumns: {
			end: 1
		},
	});

	let itemTable = $("#items").DataTable({
		ajax: {
			url: "/project/item/id/" + $('#project_id').val(),
			dataSrc: ''
		},
		processing: true,
		columns: [{
				data: "product_id",
				render: function(data, type, row, meta) {
					return '<b class="item-name">' + data + '</b>' + '<br>' + row.item_desc;
				}
			},
			{
				data: "qty"
			},
			{
				data: "unit_price"
			},
			{
				data: "uom"
			},
			{
				data: "subtotal"
			},
			{
				data: "note"
			},
			{
				data: "product_id",
				render: function(data, type, row, meta) {
					//var oldData = getolddata($(this).closest('tr'));
					return '<div class="row-button">' +
						'<a title="Edit this item" class="edit" href="#">' +
						'<span class="button-wrap">' +
						'<span class="icon icon-edit"></span>' +
						'</span></a>' +
						'<a title="Delete this item" class="item_delete" href="/project/deleteitem/pro/' + row.project_id + '/item/' + data + '/uom/' + row.uom + '/price/' + row.unit_price + '/qty/' + row.qty + '"' +
						'index="' + data + '">' +
						'<span class="button-wrap">' +
						'<span class="icon icon-delete"></span>' +
						'</span></a></div>';
				}
			}
		],
		columnDefs: [{
				targets: [0, 1, 2, 3, 4],
				className: 'dt-body-center'
			},
			{
				targets: [0, 1, 2, 3, 4, 5, 6],
				className: 'dt-head-center'
			},
		],
		layout: {
			topStart: null,
			topEnd: null
		},
		//order: { data: "added.date" },
		paging: false,
		scrollX: true,
		fixedColumns: {
			start: 1,
			end: 1
		},
		rowReorder: true
	});

	let projectQuoteTable= $('#project-quote-table').DataTable({
		ajax: {
            url: "/project/quote/id/" + $('#project_id').val(),
			dataSrc: ''
        },
        processing: true,
        columns: [{
                data: "quote_id",
                render: function(data, type, row, meta) {
                    return "<a target='_blank' href='/quote/edit/id/" + data + "'>" + data + "</a>";
                }
            },
			{
				data: 'name'
			},
            {
                data: "Market_Segment"
            },
            {
                data: "quote_date.date",
                render: function(data) {
                    let date = new Date(data);
                    return date.toLocaleDateString();
                }
            },
            {
                data: "expire_date.date",
                render: function(data) {
                    let date = new Date(data);
                    let today = new Date();
                    if (date <= today) {
                        return '<span class="red">' + date.toLocaleDateString() + '</span>';
                    } else {
                        return date.toLocaleDateString();
                    }
                }
            },
            {
                data: "ship_required_date.date",
                render: function(data) {
                    let date = new Date(data);
                    return date.toLocaleDateString();
                }
            },
            {
                data: "approve_status",
                render: function(data) {
                    if (data == -1) {
                        return '<span class="disapproved red">Disapproved</span>';
                    } else if (data == 10) {
                        return '<span class="approved green">Approved</span>';
                    } else if (data == 1) {
                        return '<span class="waiting orange">Waiting</span>';
                    } else {
                        return 'Not submitted';
                    }
                }
            }
        ],
        columnDefs: [{
            targets: [0, 2, 3, 4, 5, 6],
            className: 'dt-body-center'
        }],
        order: [
            [0, "desc"]
        ],
        fixedColumns: {
            start: 1,
            end: 1
        },
        scrollX: true,
        layout: {
            topStart: null,
			topEnd: null
        }
	});


	function resetForm($form) {
		$form.find('input:text, input:password, input:file, select, textarea').val('');
		$form.find('input:radio, input:checkbox')
			.prop('checked', false)
			.prop('selected', false);
	}

	var current_edit_row = '';

	$(function() {

		$('#options-button').on("click", function() {
			$('#options-menu-items').slideToggle({
				start: function() {
    				$(this).css('display','flex');
				}
			});
		})

		$("#awarded_contractor").autocomplete({
			source: function(request, response) {
				$.ajax({
					url: '/customer/fetchbynamecompany/',
					dataType: "json",
					data: {
						term: request.term,
						company: $('#awarded_contractor_loc').val()
					},
					success: function(data) {
						response(data);
					}
				});
			},
			minLength: 2,
			select: function(event, ul) {
				$('#awarded_contractor').val(ul.item.name);
				$('#awarded_contractor_id').val(ul.item.customer_id);
				getcustomerbyid(ul.item.customer_id, $('#awarded_contractor'));
			},

		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a>Company: " + item.name + "<br>" + item.fullname + ' ' + item.city + ' ' + item.tel + "</a>")
				.appendTo(ul);
		};

		$("#gerneral_contractor").autocomplete({
			source: function(request, response) {
				$.ajax({
					url: '/customer/fetchbynamecompany/',
					dataType: "json",
					data: {
						term: request.term,
						company: $('#gerneral_contractor_loc').val()
					},
					success: function(data) {
						response(data);
					}
				});
			},
			minLength: 2,
			select: function(event, ul) {
				$('#gerneral_contractor').val(ul.item.name);
				$('#gerneral_contractor_id').val(ul.item.customer_id);
				getcustomerbyid(ul.item.customer_id, $('#gerneral_contractor'));
			},

		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a>Company: " + item.name + "<br>" + item.fullname + ' ' + item.city + ' ' + item.tel + "</a>")
				.appendTo(ul);
		};

		$('#architect_loc').on("change", function() {
			$('.loading').show();
			$.ajax({
				url: '/sales/fetchbylocation/loc/' + $(this).val(),
				type: "get",
				success: function(data) {
					var result = JSON.parse(data);
					var list = '<option >Select Architect / Owner</option>';
					$.each(result, function(i, item) {
						list = list + '<option value="' + item.id + '">' + item.name + ' - ' + item.default_company + '</option>';
					});
					$('#architect').html(list);
					$('.loading').hide();
				}
			});
			$('.loading').show();
		});

		$('#specifiler_loc').on("change", function() {
			$('.loading').show();
			$.ajax({
				url: '/sales/fetchspecbylocation/loc/' + $(this).val(),
				type: "get",
				success: function(data) {
					var result = JSON.parse(data);
					var list = '<option >Choose Specifiler</option>';
					if (result.length == 0) {
						$('#specifiler').html(list);
					} else {
						$.each(result, function(i, item) {
							list = list + '<option value="' + item.uid + '">' + item.Specifier + ' - ' + item.Company_ID + '</option>';
						});
						$('#specifiler').html(list);
					}
					$('.loading').hide();
				}
			});
		});

		$("#architect_name").autocomplete({
			source: function(request, response) {
				$('#architect').val('');
				$.ajax({
					url: '/sales/fetchspec/',
					dataType: "json",
					data: {
						term: request.term,
						loc: $('#architect_loc').val()
					},
					success: function(data) {
						response(data);
					}
				});
			},
			minLength: 2,
			select: function(event, ul) {
				$("#architect_name").val(ul.item.Specifier);
				$('#architect').val(ul.item.uid);
				return false;
			},

		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a>" + item.Specifier + "</a>")
				.appendTo(ul);
		};

		$("#specifiler_name").autocomplete({
			source: function(request, response) {
				$.ajax({
					url: '/sales/fetchspec/',
					dataType: "json",
					data: {
						term: request.term,
						loc: $('#specifiler_loc').val()
					},
					success: function(data) {
						response(data);
					}
				});
			},
			minLength: 2,
			select: function(event, ul) {
				$("#specifiler_name").val(ul.item.Specifier);
				$('#specifiler').val(ul.item.uid);
				return false;
			},

		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a>" + item.Specifier + "</a>")
				.appendTo(ul);
		};

		let currentRow = '';

		$('#items tbody').on('click', 'tr', function() {
			currentRow = itemTable.row(this).data();
			//console.log(currentRow['product_id'], currentRow['note'], currentRow['qty']);
		});

		function getolddata(row) {
			let item_id = currentRow['product_id'];
			let item_name = currentRow['item_desc'];
			let note = currentRow['note'];
			let qty = currentRow['qty'];
			let unit_price = currentRow['unit_price'];
			let uom = currentRow['uom'];
			var data = {
				'old_item_id': item_id,
				'old_uom': uom,
				'old_price': unit_price,
				'old_qty': qty,
				'old_note': note
			};
			return data;
		}

		$("#dialog-message").dialog({
			autoOpen: false,
			modal: true,
			minWidth: 800,
			width: 800,
			//minHeight: 600,
			open: function() { // fade in background
				$('.ui-widget-overlay').hide().fadeIn();
			},
			beforeClose: function() { //fade out background
				$('.ui-widget-overlay:first')
					.clone()
					.appendTo('body')
					.show()
					.fadeOut(400, function() {
						$(this).remove();
					});
			},
			dialogClass: 'add-item-dialog',
			buttons: [{
					id: "btn-add",
					text: "Add Log",
					click: function() {
						if ($("#memo").validationEngine('validate') == true) {
							if (isEditMemo == false) {
								addmemo();
							} else {
								editMemo();
							}
							$(this).dialog("close");
						}
					}
				},
				{
					id: "btn-cancel",
					text: "Cancel",
					click: function() {
						$(this).dialog("close");
					}
				}
			]
		});

		$("#dialog-item").dialog({
			autoOpen: false,
			modal: true,
			minWidth: 800,
			width: 800,
			//minHeight: 600,
			open: function() { // fade in background
				$('.ui-widget-overlay').hide().fadeIn();
			},
			beforeClose: function() { //fade out background
				$('.ui-widget-overlay:first')
					.clone()
					.appendTo('body')
					.show()
					.fadeOut(400, function() {
						$(this).remove();
					});
			},
			dialogClass: 'add-item-dialog',
			buttons: [{
					id: "btn-add",
					text: "Add",
					click: function() {
						if ($("#item").validationEngine('validate') == true) {
							if ($('#is_edit').val() == 1) {
								edititem($('#item_id').val(), $('#item_input').val(), $('#uom').val(), $('#price').val(), $('#qty').val(), $('#note').val());
							} else {
								additem($('#item_id').val(), $('#item_input').val(), $('#uom').val(), $('#price').val(), $('#qty').val(), $('#note').val());
							}
							$(this).dialog("close");
							resetForm($('#item'));
						}
					}
				},
				{
					id: "btn-cancel",
					text: "Cancel",
					click: function() {
						$(this).dialog("close");
					}
				}
			]
		});

		$('#add_item').on("click", function() {
			resetForm($('#item'));
			$('#is_edit').val(0);
			$("#dialog-item").dialog("open");
			return false;
		});

		$(document).on("click", "a.edit", function() {
			$("#dialog-item").dialog("open");
			current_edit_row = $(this).closest('tr');
			set_edit(current_edit_row);
			//console.log(current_edit_row);
			return false;
		});

		function set_edit(row) {
			$("#dialog-item").dialog("option", "title", "Edit Item");
			$('#is_edit').val(1);

			let oldData = getolddata(current_edit_row);

			$('#item #item_id').val(oldData['old_item_id']);
			$('#item #price').val(oldData['old_price']);
			$('#item #qty').val(oldData['old_qty']);
			$('#item #note').val(oldData['old_note']);

			getoumedit(oldData['old_item_id'], oldData['old_uom'], oldData['old_price']);
		}

		function getoumedit(item_id, unit_number, price) {
			$('.loading').show();
			$.ajax({
				url: '/item/uom/id/' + $("#item_id ").val(),
				type: "get",
				success: function(data) {
					var uom = JSON.parse(data);
					var list = '';
					$.each(uom, function(i, item) {
						list = list + '<option value="' + item.uom + '">' + item.uom + '</option>';
					});
					$('#uom').html(list);
					$('#uom option[value=' + unit_number + ']').attr('selected', 'selected');
					$('#uniform-uom span').html(unit_number);
					$('#price').val(price);
					$('.loading').hide();
				}
			});

		}

		$(document).on('click', ".item_delete", function(e) {
			e.preventDefault();
			//var data = getolddata($(this).closest('tr'));
			if (confirm("Are you sure you want to delete this item?") == true) {
				//$(this).parent().parent().remove();
				$('.loading').show();
				$.ajax({
					url: $(this).attr('href'),
					//url: '/project/deleteitem/pro/' + $('#project_id').val() + '/item/' + $(this).attr('index') + '/uom/' + data['old_uom'] + '/price/' + data['old_price'] + '/qty/' + data['old_qty'],
					type: "get",
					success: function(data) {
						itemTable.ajax.reload();
						$('.loading').hide();
					}
				});
			}
		});

		function getcustomerbyid(id, obj) {
			$('.loading').show();
			$.ajax({
				url: '/customer/fetchbyid/id/' + id,
				type: "get",
				success: function(data) {
					var result = JSON.parse(data);
					if (result != null) {
						$(obj).val(result.name);
						$('input[name=' + $(obj).attr('id') + ']').val(result.name);
					} else {
						alert('Can\'t find customer');
						$('#customer_info input').val('');
					}
					$('.loading').hide();
				}
			});
		}

		$(".dialog #item_id").autocomplete({
			source: '/item/index/',
			minLength: 2,
			focus: function(event, ui) {
				//$("#item_input").val(ui.item.item_desc);
				return false;
			},
			select: function(event, ui) {
				$("#item_input").val(ui.item.item_desc);
				$("#item_id").val(ui.item.item_id);
				getoum(ui.item.item_id);
				$('#uom').prop('disabled', false);
				$('#uniform-uom').removeClass('disabled');
				return false;
			}
		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a><b>" + item.item_id + " - " + item.item_desc + "</b></a>")
				.appendTo(ul);
		};

		$(".dialog #item_id").on('paste', function(e) {
			alert('paste');
			$(".dialog #item_id").select();
		});

		function getoum(item_id) {
			$('.loading').show();
			$.ajax({
				url: '/item/uom/id/' + $("#item_id ").val(),
				type: "get",
				success: function(data) {
					var uom = JSON.parse(data);
					var list = '';
					$.each(uom, function(i, item) {
						list = list + '<option value="' + item.uom + '">' + item.uom + '</option>';
					});
					$('#uom').html(list);
					$('#uom option').eq(0).attr("selected", "selected");
					$('#uniform-uom span').html(uom[0].uom);
					getprice();
					$('.loading').hide();
				}
			});

		};

		function getprice() {
			$('.loading').show();
			$.ajax({
				url: '/item/price/id/' + $("#item_id ").val() + '/uom/' + $("#uom ").val(),
				type: "get",
				success: function(data) {
					var price = JSON.parse(data);
					$('#price').val(price.price);
					$('.loading').hide();
				}
			});

		};

		function additem(item_id, item_desc, uom, price, qty, note) {
			$('.loading').show();
			$.ajax({
				url: '/project/additem/pro/' + $('#project_id').val(),
				type: "post",
				data: $("#item").serialize(),
				success: function(data) {
					$('.loading').hide();
					itemTable.ajax.reload();
				}
			});
		};

		function edititem(item_id, item_desc, uom, price, qty, note) {
			ajaxedititem(item_id, uom, price, qty, note);
			//current_edit_row.replaceWith(str);
		}

		function ajaxedititem(item_id, uom, price, qty, note) {
			var olddata = getolddata(current_edit_row);
			var data = {
				'item_id': item_id,
				'uom': uom,
				'price': price,
				'qty': qty,
				'note': note,
				'old_item_id': olddata['old_item_id'],
				'old_uom': olddata['old_uom'],
				'old_price': olddata['old_price'],
				'old_qty': olddata['old_qty'],
				'old_note': olddata['old_note']
			};
			console.log(data);
			$.ajax({
				url: '/project/edititem/pro/' + $('#project_id').val(),
				type: "post",
				data: data,
				success: function(data) {
					itemTable.ajax.reload();
				}
			});
		};

		$("#uom, #uniform-uom").on("change", function() {
			getprice();
			return false;
		});

		let unsave = false;

		$('#project_content').on("change", function() {
			$('#save-project').prop("disabled", false);
			unsave = true;
		});

		$('#save-project').on("click", function(e) {
			e.preventDefault();
			if ($("#project_content").validationEngine('validate') == true) {
				if ($('#status').val() != 13) {
					if ($('#gerneral_contractor').val() == '') {
						$('#gerneral_contractor_id').val('')
					}; // delete contractor
					if ($('#awarded_contractor').val() == '') {
						$('#awarded_contractor_id').val('')
					};
					$('#project_content').trigger("submit");
					unsave = false;
				}
			}
		});

		window.onbeforeunload = function() {
			if (unsave) {
				$('#save-project').trigger("focus");
				return "You have unsaved changes project information. Do you want to leave this page and discard your changes or stay on this page?";
			}
		}

		$('.delete_pro').on("click", function() {
			if (confirm("Are you sure you want to delete this project?") == true) {
				$('.loading').show();
				$.ajax({
					url: '/project/delete/id/' + $('#project_id').val(),
					type: "get",
					success: function(data) {
						$('.loading').hide();

						window.location = '/';
					}
				});
			}
		});

		$('#worksheet_assign').autocomplete({
			source: '/user/id',
			minLength: 1,
			select: function(event, ui) {
				$('#worksheet_assign').val(ui.item.id);
				return false;
			}
		}).data("ui-autocomplete")._renderItem = function(ul, item) {
			return $("<li></li>")
				.data("item.autocomplete", item)
				.append("<a>" + item.id + "</br>" + item.name + "</a>")
				.appendTo(ul);
		}

		let currentMemoRow = '';
		let isEditMemo = false;

		$('#project_memo tbody').on('click', 'tr', function() {
			currentMemoRow = memoTable.row(this).data();
		});

		$(document).on("click", ".memo-edit", function(e) {
			e.preventDefault();

			isEditMemo = true;

			$("#dialog-message").dialog("option", "title", "Edit Log");
			$("#dialog-message").dialog("open");

			$('#memo #title').val(currentMemoRow['title']);
			$('#memo #content').val(currentMemoRow['content']);
			$('#memo #type').val(currentMemoRow['type']);
			let followUpDate = new Date(currentMemoRow['follow_up_date']['date']);
			$('#memo #follow_up_date').val(followUpDate.toLocaleDateString());
		})

		$('#opener').on("click", function() {
			isEditMemo = false;
			document.getElementById("memo").reset();
			$("#dialog-message").dialog("option", "title", "Add Log");
			$("#dialog-message").dialog("open");
		});

		function addmemo() {
			$.ajax({
				url: '/memo/add/pro/' + $('#project_id').val(),
				type: "post",
				data: $("#memo").serialize(),
				success: function(data) {
					$('.loading').hide();
					if (data > 0) {
						memoTable.ajax.reload();
					}
					resetForm($('#memo'));
				}
			});
		};

		function editMemo() {
			$.ajax({
				url: '/memo/edit/id/' + currentMemoRow['memo_id'],
				type: "post",
				data: $("#memo").serialize(),
				success: function(data) {
					memoTable.ajax.reload();
					resetForm($('#memo'));
				}
			});
		};

		$(document).on('click', '.memo_delete', function(e) {
			e.preventDefault();
			var obj = $(this);
			if (confirm("Confirm delete this log?") == true) {
				$('.loading').show();
				$.ajax({
					url: $(this).attr('href'),
					type: "get",
					success: function(data) {
						//var index = $('#project_memo tbody tr').index(obj.parent().parent());
						//if (index != -1) {
						memoTable.ajax.reload();
						//}
						$('.loading').hide();
					}
				});
			}
		});
	});
</script>